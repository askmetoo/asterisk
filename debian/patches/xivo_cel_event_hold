Index: asterisk-13.6.0/include/asterisk/cel.h
===================================================================
--- asterisk-13.6.0.orig/include/asterisk/cel.h
+++ asterisk-13.6.0/include/asterisk/cel.h
@@ -75,6 +75,10 @@ enum ast_cel_event_type {
 	AST_CEL_FORWARD = 16,
 	/*! \brief A local channel optimization occurred */
 	AST_CEL_LOCAL_OPTIMIZE = 17,
+	/*! \brief a AST_CONTROL_HOLD frame is read from a channel */
+	AST_CEL_HOLD = 18,
+	/*! \brief a AST_CONTROL_UNHOLD frame is read from a channel */
+	AST_CEL_UNHOLD = 19,
 };
 
 /*!
Index: asterisk-13.6.0/main/cel.c
===================================================================
--- asterisk-13.6.0.orig/main/cel.c
+++ asterisk-13.6.0/main/cel.c
@@ -302,6 +302,8 @@ static const char * const cel_event_type
 	[AST_CEL_FORWARD]          = "FORWARD",
 	[AST_CEL_LINKEDID_END]     = "LINKEDID_END",
 	[AST_CEL_LOCAL_OPTIMIZE]   = "LOCAL_OPTIMIZE",
+	[AST_CEL_HOLD]             = "HOLD",
+	[AST_CEL_UNHOLD]           = "UNHOLD",
 };
 
 struct cel_backend {
@@ -1344,6 +1346,10 @@ static void cel_generic_cb(
 			cel_report_event(obj->snapshot, event_type, event, extra, NULL);
 			break;
 		}
+	case AST_CEL_HOLD:
+	case AST_CEL_UNHOLD:
+		cel_report_event(obj->snapshot, event_type, NULL, NULL, NULL);
+		break;
 	default:
 		ast_log(LOG_ERROR, "Unhandled %s event blob\n", ast_cel_get_type_name(event_type));
 		break;
Index: asterisk-13.6.0/main/channel.c
===================================================================
--- asterisk-13.6.0.orig/main/channel.c
+++ asterisk-13.6.0/main/channel.c
@@ -75,6 +75,7 @@ ASTERISK_FILE_VERSION(__FILE__, "$Revisi
 #include "asterisk/test.h"
 #include "asterisk/stasis_channels.h"
 #include "asterisk/max_forwards.h"
+#include "asterisk/cel.h"
 
 /*** DOCUMENTATION
  ***/
@@ -3704,6 +3705,7 @@ static struct ast_frame *__ast_read(stru
 	struct ast_frame *f = NULL;	/* the return value */
 	int prestate;
 	int cause = 0;
+	enum ast_cel_event_type event_type = 0;
 
 	/* this function is very long so make sure there is only one return
 	 * point at the end (there are only two exceptions to this).
@@ -3936,6 +3938,10 @@ static struct ast_frame *__ast_read(stru
 				}
 				ast_frfree(f);
 				f = &ast_null_frame;
+			} else if (f->subclass.integer == AST_CONTROL_HOLD) {
+				event_type = AST_CEL_HOLD;
+			} else if (f->subclass.integer == AST_CONTROL_UNHOLD) {
+				event_type = AST_CEL_UNHOLD;
 			}
 			break;
 		case AST_FRAME_DTMF_END:
@@ -4269,6 +4275,11 @@ done:
 		ast_channel_audiohooks_set(chan, NULL);
 	}
 	ast_channel_unlock(chan);
+
+	if (event_type) {
+		ast_cel_publish_event(chan, event_type, ast_json_null());
+	}
+
 	return f;
 }
 
Index: asterisk-13.6.0/configs/samples/cel.conf.sample
===================================================================
--- asterisk-13.6.0.orig/configs/samples/cel.conf.sample
+++ asterisk-13.6.0/configs/samples/cel.conf.sample
@@ -59,6 +59,8 @@ apps=dial,park
 ;  USER_DEFINED     -- Triggered from the dialplan, and has a name given by the
 ;                      user
 ;  LOCAL_OPTIMIZE   -- A local channel pair is optimizing away.
+;  HOLD             -- The time a hold control frame was read
+;  UNHOLD           -- The time an unhold control frame was read
 ;
 ; Default value: none
 ;                (Track no events)
